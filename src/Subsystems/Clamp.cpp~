// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.




#include "Clamp.h"
#include "../RobotMap.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

Clamp::Clamp() : Subsystem("Clamp") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	piston = RobotMap::clamppiston;
	compressor1 = RobotMap::clampCompressor1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	piston->Set(piston->kReverse);
}
    
void Clamp::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	//SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}


// Put methods for controlling this subsystem
// here. Call these from Commands.
void Clamp::ClampOn(){
	piston->Set(piston->kForward); //moves clamp to closed position to pick up totes
}
void Clamp::ClampOff(){
	piston->Set(piston->kReverse); //moves clamp to open position to put down totes
}
void Clamp::ToggleClamp(){
	if(piston->Get() == piston->kReverse)//sees what position the clamp is in the sets in the opposite
		piston->Set(piston->kForward);
	else
		piston->Set(piston->kReverse);
}
